// <auto-generated />
using System;
using KO.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KO.DAL.Migrations
{
    [DbContext(typeof(KO_DBContext))]
    [Migration("20190917175952_correct")]
    partial class correct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KO.Entity.Exam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Header");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MemberID");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("KO.Entity.ExamsOfMember", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CorrectCount");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ExampID");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MemberID");

                    b.HasKey("ID");

                    b.HasIndex("MemberID");

                    b.ToTable("ExamsOfMembers");
                });

            modelBuilder.Entity("KO.Entity.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("KO.Entity.OptionsOfQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsCorrect");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Option")
                        .IsRequired();

                    b.Property<int>("QuestionOfExamID");

                    b.HasKey("ID");

                    b.HasIndex("QuestionOfExamID");

                    b.ToTable("OptionsOfQuestions");
                });

            modelBuilder.Entity("KO.Entity.QuestionOfExam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ExamID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Question");

                    b.HasKey("ID");

                    b.HasIndex("ExamID");

                    b.ToTable("QuestionOfExams");
                });

            modelBuilder.Entity("KO.Entity.Exam", b =>
                {
                    b.HasOne("KO.Entity.Member", "Member")
                        .WithMany("Exams")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KO.Entity.ExamsOfMember", b =>
                {
                    b.HasOne("KO.Entity.Member")
                        .WithMany("ExamsOfMembers")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KO.Entity.OptionsOfQuestion", b =>
                {
                    b.HasOne("KO.Entity.QuestionOfExam", "QuestionOfExam")
                        .WithMany("OptionsOfQuestions")
                        .HasForeignKey("QuestionOfExamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KO.Entity.QuestionOfExam", b =>
                {
                    b.HasOne("KO.Entity.Exam", "Exam")
                        .WithMany("QuestionOfExams")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
